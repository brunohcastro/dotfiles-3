# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard

# font for window titles. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
font xft:Terminus 12

## Keybindings
set $mod Mod4
## Focus: ijkl  ->  ↑←↓→
bindcode $mod+31 focus up
bindcode $mod+44 focus left
bindcode $mod+45 focus down
bindcode $mod+46 focus right

## Move focused window
bindcode $mod+Shift+31 move up
bindcode $mod+Shift+44 move left
bindcode $mod+Shift+45 move down
bindcode $mod+Shift+46 move right
## Change container layout (stacked, tabbed, default)
bindsym $mod+q layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout default
## In stacked/tabbed windows cursor may wrap in cycle
force_focus_wrapping no
## u     Focus the parent container
bindcode $mod+30 focus parent
## m     Focus the child container
bindcode $mod+58 focus child
## h     Split in horizontal orientation
bindcode $mod+43 split h
## v     Split in vertical orientation
bindcode $mod+55 split v

## Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
## SPC	Toggle tiling / floating
bindsym $mod+space floating toggle
## S-SPC  Focus last floating/tiled container
bindsym $mod+Shift+space focus mode_toggle
## f    Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen
## c    Kill focused window
bindsym $mod+c kill

## C-u   Focus to next output to the left
bindcode $mod+Control+30 focus output left
## C-o   Focus to next output to the right [o]
bindcode $mod+Control+32 focus output right

## S-r  Reload configuration file
bindsym $mod+Shift+r reload
## C-r  Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Control+r restart
## C-q  Quit
bindsym $mod+Control+q exec "~/.i3/on_quit.sh"
# bindsym $mod+Control+Shift+q exec "sudo /usr/bin/killall iftop; ~/scripts/xorg.conf_chooser.sh"
## C-t  To choose other xorg.conf when X will start again.
bindsym $mod+Control+t exec "~/.i3/autostart.sh stop_after_main_workspace"

## How to make it work?
#bindsym $mod+Control_L+y exec "zenity --info --text=CONTROL_L"
#bindsym $mod+Control_R+y exec "zenity --info --text=CONTROL_R"

## Resize window (you can also use the mouse for that)
mode "resize" {
	bindcode 31   resize grow height 10 px or 10 ppt
	bindcode 44   resize shrink width 10 px or 10 ppt
	bindcode 45   resize shrink height 10 px or 10 ppt
	bindcode 46   resize grow width 10 px or 10 ppt
	## Back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
## x	Resize
bindsym $mod+x mode "resize"


## RET
bindsym $mod+Return exec urxvtc
## r
## One-command urxvtc instance, it is replacement for dmenu (also see ~/.bashrc and ~/.Xresources)
bindsym $mod+r exec --no-startup-id /bin/bash -c 'export ONE_COMMAND_SHELL=t && urxvtc -name one_command_shell'
## s
bindcode $mod+39 exec --no-startup-id ". ~/scripts/screenshot.sh"
## S-s
bindcode --release $mod+Shift+39 exec --no-startup-id  "~/scripts/screenshot.sh -area"
## A-S-s
bindcode --release $mod+Mod1+Shift+39 exec --no-startup-id  "~/scripts/screenshot.sh -area -indexed"
## C-s
##       66 is actually control (they are swapped with capslock on my keyboard)
bindcode --release $mod+66+39 exec --no-startup-id "~/scripts/screenshot.sh -delay"
## A-C-s
##       66 is actually control (they are swapped with capslock on my keyboard)
bindcode --release $mod+Mod1+66+39 exec --no-startup-id "~/scripts/screenshot.sh -delay -indexed"
## C-l i3lock
bindcode $mod+Control+46 exec --no-startup-id i3lock
##
## F1
bindcode $mod+67 exec --no-startup-id mpc toggle
## F2
bindcode $mod+68 exec --no-startup-id "~/scripts/add2playlist.sh"
bindcode $mod+Shift+68 exec --no-startup-id "~/scripts/add2playlist.sh -c" # create new
## F3
bindcode $mod+69 exec --no-startup-id amixer set Master toggle
## F4
## See ‘amixer scontrols | $PAGER’ for a complete list of controls
bindcode $mod+70 exec --no-startup-id "amixer sset 'Capture',0 toggle"
## F5
bindcode $mod+71 exec --no-startup-id amixer set Master 1%-
bindcode $mod+Control+71 exec --no-startup-id xbacklight -dec 5
## F6
bindcode $mod+72 exec --no-startup-id eval mpc volume -1
## F7
bindcode $mod+73 exec --no-startup-id eval mpc volume +1
## F8
bindcode $mod+74 exec --no-startup-id amixer set Master 1%+
bindcode $mod+Control+74 exec --no-startup-id xbacklight -inc 5
## F9
bindcode $mod+75 exec --no-startup-id eval mpc prev
## F10
bindcode $mod+76 exec --no-startup-id eval mpc next
## F11
bindcode $mod+95 exec --no-startup-id eject
bindcode $mod+Shift+95 exec --no-startup-id eject -t
## F12
#bindcode $mod+96 exec --no-startup-id /bin/bash -c ""

## g     Restrict wallpapers to subdirectory
bindcode $mod+42 exec --no-startup-id "~/scripts/wallpaper_setter.sh -r"
## b     Decrease brightness
bindcode $mod+56 exec --no-startup-id "~/scripts/wallpaper_setter.sh -b -0.1"
## S-b   Increase brightness
bindcode $mod+Shift+56 exec --no-startup-id "~/scripts/wallpaper_setter.sh -b +0.1"
## n     Change mode
bindcode $mod+57 exec --no-startup-id "~/scripts/wallpaper_setter.sh -m"
## ,     Set previous (<)
bindcode $mod+59 exec --no-startup-id "~/scripts/wallpaper_setter.sh -p"
## .     Set new (>)
bindcode $mod+60  exec --no-startup-id "~/scripts/wallpaper_setter.sh -n"
## S-.   Force new (--|>)
bindcode $mod+Shift+60  exec --no-startup-id "~/scripts/wallpaper_setter.sh -fn"
## /     Keep
bindcode $mod+61 exec --no-startup-id "~/scripts/wallpaper_setter.sh -k"

## Switch to workspace and launch related application.
bindsym $mod+1 workspace 1:Main
bindsym $mod+2 exec --no-startup-id "i3-msg workspace 2:Firefox && { pgrep -u $UID firefox &>/dev/null || { firefox & } }"
bindsym $mod+3 exec --no-startup-id "i3-msg workspace 3:Thunar && { pgrep -u $UID thunar &>/dev/null || { thunar & } }"
## This is to distinguish emacsclient window running in X and those in
##   terminals, i.e. to forbid creation more than one X window while there can
##   be other emacsclients in terminals. See also ‘ec‘ and ‘emc’ aliases
##   in ~/.bashrc.
bindsym $mod+4 exec --no-startup-id "i3-msg workspace 4:Emacs && { pgrep -u $UID -f '^emacsclient --al' || { emacsclient --alternate-editor= -c -display $DISPLAY & } }"
bindsym $mod+5 workspace 5:Misc
bindsym $mod+6 workspace 6:IM
bindsym $mod+7 workspace 7:Games
bindsym $mod+8 exec --no-startup-id "i3-msg workspace 8:GIMP && { pgrep -u $UID gimp &>/dev/null || { gimp & } }"
bindsym $mod+9 exec --no-startup-id "i3-msg workspace 9:MPD && { pgrep -u $UID ncmpcpp &>/dev/null || { urxvtc -name ncmpcpp -e ncmpcpp & } }"
bindsym $mod+0 workspace Outer space
# bindcode $mod+20 workspace Mail

workspace "1:Main"        output PRIMARY_OUTPUT
workspace "2:Firefox"     output PRIMARY_OUTPUT
workspace "3:Thunar"      output PRIMARY_OUTPUT
workspace "4:Emacs"       output PRIMARY_OUTPUT
workspace "5:Misc"        output PRIMARY_OUTPUT
workspace "6:IM"          output PRIMARY_OUTPUT
workspace "7:Games"       output PRIMARY_OUTPUT
workspace "8:GIMP"        output PRIMARY_OUTPUT
workspace "9:MPD"         output PRIMARY_OUTPUT
workspace "0:Outer_space" output SLAVE_OUTPUT_1

## Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1:Main
bindsym $mod+Shift+2 move container to workspace 2:Firefox
bindsym $mod+Shift+3 move container to workspace 3:Thunar
bindsym $mod+Shift+4 move container to workspace 4:Emacs
bindsym $mod+Shift+5 move container to workspace 5:Misc
bindsym $mod+Shift+6 move container to workspace 6:IM
bindsym $mod+Shift+7 move container to workspace 7:Games
bindsym $mod+Shift+8 move container to workspace 8:GIMP
bindsym $mod+Shift+9 move container to workspace 9:MPD
bindsym $mod+Shift+0 move container to workspace 0:"Outer_space"
## -	(minus/hyphen key)
# bindcode $mod+Shift+20 move container to workspace Mail

## Assigning windows to workspaces
assign [class="Firefox"] → "2:Firefox"
assign [class="Thunar"] → "3:Thunar"
assign [class="Emacs"] → "4:Emacs"
assign [class="^libreoffice.*"] → "5:Misc"
assign [class="^qemu.*"] → "5:Misc"
assign [class="spicec"] → "5:Misc"
assign [class="openshot"] → "5:Misc"
assign [class="screenshot_preview"] → "5:Misc"
assign [class="Pidgin"] → "6:IM"
assign [class="Skype"] → "6:IM"
assign [class="Ts3client"] → "6:IM"
assign [class="Wine"] → "7:Games"
assign [class="Steam"] → "7:Games"
assign [class="hl2_linux"] → "7:Games"
assign [class="Gimp"] → "8:GIMP"
assign [class="URxvt" instance="ncmpcpp"] → "9:MPD"
assign [class="mpv" instance="big_screen"] → "0:Outer_space"

## Arbitrary commands for specific windows
for_window [class="URxvt" instance="one_command_shell"] floating enable

## This executes every reload
exec_always --no-startup-id "~/.i3/set_keyboard.sh"
## And this once at the start
exec --no-startup-id "~/.i3/autostart.sh"

## Window border style
new_window 1pixel
new_float 1pixel

hide_edge_borders both
focus_follows_mouse no

## Default
## class                    border  backgr. text    indicator
# client.focused            #4c7899 #285577 #ffffff #2e9ef4
# client.focused_inactive   #333333 #5f676a #ffffff #484e50
# client.unfocused          #333333 #222222 #888888 #292d2e
# client.urgent             #2f343a #900000 #ffffff #900000

## class                    border  backgr. text    indicator
client.focused              #ad7fa8 #75507b #ffffff #ad7fa8
client.focused_inactive     #555753 #3c3c3c #ffffff #ad7fa8
client.unfocused            #555753 #3c3c3c #888888 #ad7fa8
client.urgent               #ad7fa8 #ad7fa8 #ffffff #ff0000

bar {
	# verbose yes
	output PRIMARY_OUTPUT
	position top
	tray_output none
	workspace_buttons yes
	strip_workspace_numbers yes
	status_command ". ~/.i3/generate_json_for_i3bar.sh"
	colors {
		background #3c3c3c
		statusline #bbbbbb
		focused_workspace    #ad7fa8 #75507b #ffffff
		active_workspace     #75507b #ad7fa8 #ffffff
		inactive_workspace   #3c3c3c #3c3c3c #aaaaaa
		urgent_workspace     #df5757 #c22f2f #ffffff
	}
}

# bar {
# 	output HDMI-0
# 	position top
# 	workspace_buttons yes
# }
